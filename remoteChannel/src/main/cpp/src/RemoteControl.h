// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file RemoteControl.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_REMOTECONTROL_H_
#define _FAST_DDS_GENERATED_REMOTECONTROL_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(REMOTECONTROL_SOURCE)
#define REMOTECONTROL_DllAPI __declspec( dllexport )
#else
#define REMOTECONTROL_DllAPI __declspec( dllimport )
#endif // REMOTECONTROL_SOURCE
#else
#define REMOTECONTROL_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define REMOTECONTROL_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



/*!
 * @brief This class represents the enumeration OperationType defined by the user in the IDL file.
 * @ingroup RemoteControl
 */
enum OperationType : uint32_t
{
    SEND_ACTION,
    ACTION_REPLY
};
/*!
 * @brief This class represents the structure RequestType defined by the user in the IDL file.
 * @ingroup RemoteControl
 */
class RequestType
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport RequestType();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~RequestType();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object RequestType that will be copied.
     */
    eProsima_user_DllExport RequestType(
            const RequestType& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object RequestType that will be copied.
     */
    eProsima_user_DllExport RequestType(
            RequestType&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object RequestType that will be copied.
     */
    eProsima_user_DllExport RequestType& operator =(
            const RequestType& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object RequestType that will be copied.
     */
    eProsima_user_DllExport RequestType& operator =(
            RequestType&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x RequestType object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const RequestType& x) const;

    /*!
     * @brief Comparison operator.
     * @param x RequestType object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const RequestType& x) const;

    /*!
     * @brief This function sets a value in member operation
     * @param _operation New value for member operation
     */
    eProsima_user_DllExport void operation(
            OperationType _operation);

    /*!
     * @brief This function returns the value of member operation
     * @return Value of member operation
     */
    eProsima_user_DllExport OperationType operation() const;

    /*!
     * @brief This function returns a reference to member operation
     * @return Reference to member operation
     */
    eProsima_user_DllExport OperationType& operation();


    /*!
     * @brief This function copies the value in member action
     * @param _action New value to be copied in member action
     */
    eProsima_user_DllExport void action(
            const std::string& _action);

    /*!
     * @brief This function moves the value in member action
     * @param _action New value to be moved in member action
     */
    eProsima_user_DllExport void action(
            std::string&& _action);

    /*!
     * @brief This function returns a constant reference to member action
     * @return Constant reference to member action
     */
    eProsima_user_DllExport const std::string& action() const;

    /*!
     * @brief This function returns a reference to member action
     * @return Reference to member action
     */
    eProsima_user_DllExport std::string& action();

private:

    OperationType m_operation{::SEND_ACTION};
    std::string m_action;

};
/*!
 * @brief This class represents the structure ReplyType defined by the user in the IDL file.
 * @ingroup RemoteControl
 */
class ReplyType
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport ReplyType();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~ReplyType();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object ReplyType that will be copied.
     */
    eProsima_user_DllExport ReplyType(
            const ReplyType& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object ReplyType that will be copied.
     */
    eProsima_user_DllExport ReplyType(
            ReplyType&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object ReplyType that will be copied.
     */
    eProsima_user_DllExport ReplyType& operator =(
            const ReplyType& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object ReplyType that will be copied.
     */
    eProsima_user_DllExport ReplyType& operator =(
            ReplyType&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x ReplyType object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const ReplyType& x) const;

    /*!
     * @brief Comparison operator.
     * @param x ReplyType object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const ReplyType& x) const;

    /*!
     * @brief This function copies the value in member reply
     * @param _reply New value to be copied in member reply
     */
    eProsima_user_DllExport void reply(
            const std::string& _reply);

    /*!
     * @brief This function moves the value in member reply
     * @param _reply New value to be moved in member reply
     */
    eProsima_user_DllExport void reply(
            std::string&& _reply);

    /*!
     * @brief This function returns a constant reference to member reply
     * @return Constant reference to member reply
     */
    eProsima_user_DllExport const std::string& reply() const;

    /*!
     * @brief This function returns a reference to member reply
     * @return Reference to member reply
     */
    eProsima_user_DllExport std::string& reply();

private:

    std::string m_reply;

};

#endif // _FAST_DDS_GENERATED_REMOTECONTROL_H_

